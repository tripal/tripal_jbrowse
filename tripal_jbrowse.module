<?php

/**
 * @file
 * Provides a jbrowse instance entity type.
 */

use Drupal\Core\Render\Element;
use Drupal\tripal_jbrowse\Entity\JbrowseInstance;
use Drupal\user\UserInterface;

/**
 * Implements hook_theme().
 */
function tripal_jbrowse_theme() {
  return [
    'jbrowse_instance' => [
      'render element' => 'elements',
    ],
  ];
}

/**
 * Prepares variables for jbrowse instance templates.
 *
 * Default template: jbrowse-instance.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the jbrowse instance information and any
 *     fields attached to the entity.
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_jbrowse_instance(array &$variables) {
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }

  $variables['#attached']['library'][] = 'tripal_jbrowse/react';
  $variables['#attached']['library'][] = 'tripal_jbrowse/jbrowse';

  /* The following code is in javascript and needs to be Drupalized.

  <script language='javascript' src="https://unpkg.com/react@16/umd/react.development.js" crossorigin></script>
  <script language='javascript' src="https://unpkg.com/react-dom@16/umd/react-dom.development.js" crossorigin></script>
  <script language='javascript' src="https://s3.amazonaws.com/jbrowse.org/jb2_releases/jbrowse-linear-genome-view/jbrowse-linear-genome-view%40v1.6.7_custom/umd/react-linear-genome-view.umd.development.js" crossorigin></script>

  <script type="module">
      import assembly from '/assembly.js'
      import tracks from '/tracks.js'
      const { createViewState, JBrowseLinearGenomeView } =
        JBrowseReactLinearGenomeView
      const { createElement } = React
      const { render } = ReactDOM
      const state = new createViewState({
        assembly,
        tracks,
        location: '1:100,987,269..100,987,368',
      })
      render(
        createElement(JBrowseLinearGenomeView, { viewState: state }),
        document.getElementById('jbrowse_linear_genome_view'),
      )
  </script>
  */

}

/**
 * Implements hook_user_cancel().
 */
function tripal_jbrowse_user_cancel($edit, UserInterface $account, $method) {
  switch ($method) {
    case 'user_cancel_reassign':
      // Anonymize jbrowse instances.
      $storage = \Drupal::entityTypeManager()->getStorage('jbrowse_instance');
      $jbrowse_instance_ids = $storage->getQuery()
        ->condition('uid', $account->id())
        ->execute();
      foreach ($storage->loadMultiple($jbrowse_instance_ids) as $jbrowse_instance) {
        $jbrowse_instance->setOwnerId(0);
        $jbrowse_instance->save();
      }
      break;
  }
}

/**
 * Implements hook_ENTITY_TYPE_predelete() for user entities.
 */
function tripal_jbrowse_user_predelete(UserInterface $account) {
  // Delete jbrowse instances.
  $storage = \Drupal::entityTypeManager()->getStorage('jbrowse_instance');
  $jbrowse_instance_ids = $storage->getQuery()
    ->condition('uid', $account->id())
    ->execute();
  $jbrowse_instances = $storage->loadMultiple($jbrowse_instance_ids);
  $storage->delete($jbrowse_instances);
}
